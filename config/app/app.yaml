apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: knative-demo-buildconfig
objects:
- apiVersion: serving.knative.dev/v1
  kind: Service
  metadata:
    name: event-display
    namespace: ${APP_NAMESPACE}
  spec:
    template:
      metadata:
        labels:
          module: event-display
        annotations:
          autoscaling.knative.dev/min-scale: "1"
      spec:
        containers:
          - image: gcr.io/knative-releases/knative.dev/eventing/cmd/event_display
            name: user-container
            resources:
              limits:
                memory: 200Mi
- apiVersion: sources.knative.dev/v1
  kind: PingSource
  metadata:
    name: poller
    namespace: ${APP_NAMESPACE}
  spec:
    schedule: "*/1 * * * *"
    contentType: "application/json"
    data: '{"message": "Triggered from poller every 1 minute"}'
    sink:
      ref:
        apiVersion: v1
        kind: Service
        name: producer-quarkus
- apiVersion: serving.knative.dev/v1
  kind: Service
  metadata:
    name: producer-quarkus
    namespace: ${APP_NAMESPACE}
  spec:
    template:
      metadata:
        labels:
          module: producer-quarkus
          app: knative-quickstarts-demo
        annotations:
          autoscaling.knative.dev/min-scale: "1"
      spec:
        containers:
          - image: image-registry.openshift-image-registry.svc:5000/${APP_NAMESPACE}/producer-quarkus:latest
            name: knative-quickstarts-demo-app
            imagePullPolicy: Always
            resources:
              limits:
                memory: 200Mi
- apiVersion: serving.knative.dev/v1
  kind: Service
  metadata:
    name: dispatcher-quarkus
    namespace: ${APP_NAMESPACE}
  spec:
    template:
      metadata:
        labels:
          module: dispatcher-quarkus
          app: knative-quickstarts-demo
        annotations:
          autoscaling.knative.dev/min-scale: "1"
      spec:
        containers:
          - image: image-registry.openshift-image-registry.svc:5000/${APP_NAMESPACE}/dispatcher-quarkus:latest
            name: knative-quickstarts-demo-app
            imagePullPolicy: Always
            resources:
              limits:
                memory: 200Mi
- apiVersion: serving.knative.dev/v1
  kind: Service
  metadata:
    name: loader-quarkus
    namespace: ${APP_NAMESPACE}
  spec:
    template:
      metadata:
        labels:
          module: loader-quarkus
          app: knative-quickstarts-demo
        annotations:
          autoscaling.knative.dev/min-scale: "1"
      spec:
        containers:
          - image: image-registry.openshift-image-registry.svc:5000/${APP_NAMESPACE}/loader-quarkus:latest
            name: knative-quickstarts-demo-app
            imagePullPolicy: Always
            env:
            - name: DBHOST
              value: postgresql
            - name: DBPORT
              value: '5432'
            - name: DBNAME
              value: demodb
            - name: DBUSER
              value: demo
            - name: DBPASS
              value: demo123
            resources:
              limits:
                memory: 200Mi
parameters:
- description: App namespace
  from: '[A-Z0-9]{8}'
  generate: expression
  name: APP_NAMESPACE
labels:
  app: demo
  layer: app